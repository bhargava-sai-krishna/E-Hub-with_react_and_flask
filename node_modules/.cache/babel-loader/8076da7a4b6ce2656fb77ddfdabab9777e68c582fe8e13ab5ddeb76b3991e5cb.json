{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bhargava\\\\Documents\\\\react\\\\e-hub\\\\src\\\\AdminListClient.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminListClient(props) {\n  _s();\n  const [AdmId] = useState(props.userId);\n  const [ClientData, setClientData] = useState(null);\n  useEffect(() => {\n    const GetCLientList = () => {\n      axios.post('http://127.0.0.1:5000/GetClientList', {\n        AdmId\n      }).then(response => {\n        console.log(response.data);\n        setClientData(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n    GetCLientList();\n  }, [AdmId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"this will return the list of clients\", ClientData && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Client_id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Company\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: ClientData.map((row, index) => {\n          /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.client_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.company\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: row.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminListClient, \"TCzE08yn81COCQGTv7T+qpb5S1E=\");\n_c = AdminListClient;\nexport default AdminListClient;\nvar _c;\n$RefreshReg$(_c, \"AdminListClient\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AdminListClient","props","_s","AdmId","userId","ClientData","setClientData","GetCLientList","post","then","response","console","log","data","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","client_id","company","name","email","_c","$RefreshReg$"],"sources":["C:/Users/bhargava/Documents/react/e-hub/src/AdminListClient.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios';\r\n\r\nfunction AdminListClient(props) {\r\n  const [AdmId]=useState(props.userId);\r\n  const [ClientData, setClientData] = useState(null);\r\n  useEffect(()=>{\r\n    const GetCLientList=()=>{\r\n      axios.post('http://127.0.0.1:5000/GetClientList',{AdmId}).then((response)=>{\r\n        console.log(response.data);\r\n        setClientData(response.data);\r\n      }).catch((error)=>{\r\n        console.log(error);\r\n      })\r\n    }\r\n    GetCLientList();\r\n  },[AdmId])\r\n  return (\r\n    <div>\r\n      this will return the list of clients\r\n      {\r\n        ClientData && (\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Client_id</th>\r\n                <th>Company</th>\r\n                <th>Name</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {\r\n                ClientData.map((row,index)=>{\r\n                  <tr key={index}>\r\n                    <td>{row.client_id}</td>\r\n                    <td>{row.company}</td>\r\n                    <td>{row.name}</td>\r\n                    <td>{row.email}</td>\r\n                  </tr>\r\n                })\r\n              }\r\n            </tbody>\r\n          </table>\r\n        )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AdminListClient\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}